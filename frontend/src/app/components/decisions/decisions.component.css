/* Styles for the dropdown container */
.dropdown-container {
    display: flex;
    flex-direction: column; /* Keeps the dropdown groups side by side */
    padding: 0.5vw; /* Adds padding around the container */
    margin: 0.2vw; /* Space from container to other elements */
    /* background-color: #f8f9fa;  Light grey background */
    border-radius: 8px; /* Rounded corners */
    /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); Subtle shadow */
    justify-content: space-around; /* Distributes space between dropdown groups */
}

/* Styles for each dropdown group */
.dropdown-group {
    display: flex;
    width: 100%;
    margin: auto; /* Centers the container within its parent */
    flex-direction: column; /* Stacks label and dropdown vertically */
    align-items: left; /* Centers items in the group */
}


/* Custom styles for autocomplete list */
.autocomplete-list {
    max-height: 10vh; /* Adjust this value as needed */
    overflow-y: auto; /* Adds vertical scrollbar if needed */
    background-color: white;
    border: 1px solid #7e24c7;
    border-radius: 8px;
    box-shadow: 0 0 0 0.2rem rgba(66, 9, 133, 0.25);
    
    list-style-type: none;
    padding: 0;
    margin: 0;
    position: relative;
    z-index: 1000;
    
}

.autocomplete-list li {
    padding: 0.5vw;
    cursor: pointer;
}

.autocomplete-list li:hover {
    background-color: #e5e5e5;
}
/* Styles for labels */
.dropdown-label {
    font-weight:700;
    margin-bottom: 0.02vw; /* Space between label and dropdown */

}
.info-text{
    color:red;
    font-weight:700;
    font-size: 0.5vw;
}
/* Styles for dropdowns */
.dropdown {
    padding: 0.5vw 0.7vw; /* Padding inside the dropdown */
    border-radius: 4px; /* Rounded borders for the dropdowns */
    border: 1px solid #ccc; /* Light grey border */
    background-color: #fff; /* White background color */
    margin-bottom: 0.5vh; /* Space between each dropdown */
    cursor: pointer; /* Cursor indicates it's clickable */
    
    outline: none; /* Removes the default focus outline */
    width: 100%; /* Ensures dropdowns use the full width of their group container */
}

.dropdown:hover {
    border-color: #888; /* Darker border on hover */
}

.dropdown:focus {
    border-color: #7e24c7; /* Blue border for focus */
    border-width: 2px;
    box-shadow: 0 0 0 0.2rem rgba(66, 9, 133, 0.25); /* Glowing effect for focus */
}

/* Example of styling option elements (optional, not all browsers allow this) */
option {
    padding: 0.5vw; /* Adds padding inside options */
}
/* decisions.component.css */

/* Customizing ngx-slider */
.custom-slider {
    flex-grow: 1; /* Allows the slider to fill the available space but not all of it */
    max-width: 90%; /* Limits slider's width to 90% of its container */
}

.confirmed {
    color: green; /* Change text color to green when confirmed */
  }
  
  .unconfirmed {
    color: grey; /* Revert text color to grey when not confirmed */
  }
  .dropdown-group2 {
    margin-top:0.2vh;
    display: flex;
    flex-direction: row; /* Aligns items horizontally */
    align-items: center; /* Centers items vertically */
    justify-content: start; /* Aligns items to the start of the row */
    gap: 0.5vw; /* Adds space between the slider and the checkbox */
   /* Adds vertical padding for better spacing */
}
/* Custom checkbox styles */
.checkbox-group {
    flex-grow: 0; /* Prevents the checkbox group from expanding */
    display: flex;
    margin-left: auto;
    align-items: center; /* Ensures the checkbox is centered with the slider */
}

.custom-checkbox {
    cursor: pointer;
    width: 1vw; /* Width of the checkbox */
    height: 1vw; /* Height of the checkbox */
    border: 2px solid #ccc; /* Border for the checkbox */
    border-radius: 50%; /* Makes the checkbox circular */
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #fff; /* White background for checkbox */
}

.custom-checkbox i {
    color: green; /* Icon color when active */
    font-size: 1vw; /* Size of the icon */
}

.custom-checkbox:hover {
    border-color: #888; /* Darker border on hover */
}

.custom-checkbox:focus-within {
    border-color: #7e24c7; /* Focus color */
    box-shadow: 0 0 0 0.2rem rgba(66, 9, 133, 0.25); /* Glowing effect for focus */
}

/* Styles for the green label */
.green-label {
    color: green;
    font-weight: 700;
    margin-top: 0.5vh;
    font-size: 0.5vw;
}

/*slider*/



      


::ng-deep .custom-slider .ngx-slider .ngx-slider-bar {
    background: #e5aeff;
    height: 2px;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-selection {
    background:#a23fff;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer {
    width: 0.5vw;
    height: 1vw;
    top: auto; /* to remove the default positioning */
    bottom: 0;
    background-color: #a23fff;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer:after {
    display: none;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-bubble {
    bottom: 14px;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-limit {
    font-weight: bold;
    color: #a23fff;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-tick {
    width: 1px;
    height: 10px;
    margin-left: 4px;
    border-radius: 0;
    background: #e5aeff;
    top: -1px;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected {
    background: #e5aeff;
}

::ng-deep .custom-slider .ngx-slider .ngx-slider-span,
.custom-slider .ngx-slider .ngx-slider-model-value,
.custom-slider .ngx-slider .ngx-slider-high-value,
.custom-slider .ngx-slider .ngx-slider-tick-value,
.custom-slider .ngx-slider .ngx-slider-tick-legend {
   color: #2a0052;
font-weight:600!important;
  font-size: 0.5vw !important; /* Adjust font size as needed */
}